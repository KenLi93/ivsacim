// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// invalidivsacim_est
SEXP invalidivsacim_est(NumericVector time, NumericVector event, NumericVector stime, NumericVector Z, NumericVector Z_c, NumericMatrix D_status, NumericMatrix D_status_c, NumericMatrix Z_model_mat, NumericMatrix eps_1, NumericMatrix D_model_mat, NumericMatrix eps_2, NumericVector weights);
RcppExport SEXP _ivsacim_invalidivsacim_est(SEXP timeSEXP, SEXP eventSEXP, SEXP stimeSEXP, SEXP ZSEXP, SEXP Z_cSEXP, SEXP D_statusSEXP, SEXP D_status_cSEXP, SEXP Z_model_matSEXP, SEXP eps_1SEXP, SEXP D_model_matSEXP, SEXP eps_2SEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stime(stimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Z_c(Z_cSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D_status(D_statusSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D_status_c(D_status_cSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z_model_mat(Z_model_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type eps_1(eps_1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D_model_mat(D_model_matSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type eps_2(eps_2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(invalidivsacim_est(time, event, stime, Z, Z_c, D_status, D_status_c, Z_model_mat, eps_1, D_model_mat, eps_2, weights));
    return rcpp_result_gen;
END_RCPP
}
// ivsacim_est
SEXP ivsacim_est(NumericVector time, NumericVector event, NumericVector stime, NumericVector Zc, NumericMatrix D_status, NumericMatrix eps_1, NumericMatrix Zc_dot, NumericVector weights);
RcppExport SEXP _ivsacim_ivsacim_est(SEXP timeSEXP, SEXP eventSEXP, SEXP stimeSEXP, SEXP ZcSEXP, SEXP D_statusSEXP, SEXP eps_1SEXP, SEXP Zc_dotSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type event(eventSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type stime(stimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Zc(ZcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type D_status(D_statusSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type eps_1(eps_1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Zc_dot(Zc_dotSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(ivsacim_est(time, event, stime, Zc, D_status, eps_1, Zc_dot, weights));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ivsacim_invalidivsacim_est", (DL_FUNC) &_ivsacim_invalidivsacim_est, 12},
    {"_ivsacim_ivsacim_est", (DL_FUNC) &_ivsacim_ivsacim_est, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_ivsacim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
